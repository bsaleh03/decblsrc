[{"B:\\Voiceboard\\reactxflask\\react-flask-app\\src\\pages\\profile\\index.js":"1","B:\\Voiceboard\\reactxflask\\react-flask-app\\src\\services\\auth.service.js":"2","B:\\Voiceboard\\reactxflask\\react-flask-app\\src\\index.js":"3","B:\\Voiceboard\\reactxflask\\react-flask-app\\src\\pages\\signup\\index.js":"4","B:\\Voiceboard\\reactxflask\\react-flask-app\\src\\pages\\popular\\index.js":"5","B:\\Voiceboard\\reactxflask\\react-flask-app\\src\\App.js":"6","B:\\Voiceboard\\reactxflask\\react-flask-app\\src\\Components\\AudioRecorder.js":"7","B:\\Voiceboard\\reactxflask\\react-flask-app\\src\\Components\\postFeed\\index.js":"8","B:\\Voiceboard\\reactxflask\\react-flask-app\\src\\Components\\Navbar\\index.js":"9","B:\\Voiceboard\\reactxflask\\react-flask-app\\src\\reportWebVitals.js":"10","B:\\Voiceboard\\reactxflask\\react-flask-app\\src\\pages\\feed\\index.js":"11","B:\\Voiceboard\\reactxflask\\react-flask-app\\src\\pages\\index.js":"12"},{"size":7782,"mtime":1608791688472,"results":"13","hashOfConfig":"14"},{"size":820,"mtime":1608177999031,"results":"15","hashOfConfig":"14"},{"size":603,"mtime":1607552527146,"results":"16","hashOfConfig":"14"},{"size":5348,"mtime":1608770376484,"results":"17","hashOfConfig":"14"},{"size":3558,"mtime":1608791370145,"results":"18","hashOfConfig":"14"},{"size":1014,"mtime":1608764174560,"results":"19","hashOfConfig":"14"},{"size":2930,"mtime":1608659826270,"results":"20","hashOfConfig":"14"},{"size":4058,"mtime":1608793205059,"results":"21","hashOfConfig":"14"},{"size":2141,"mtime":1608791640309,"results":"22","hashOfConfig":"14"},{"size":362,"mtime":1607206762002,"results":"23","hashOfConfig":"14"},{"size":770,"mtime":1607475342798,"results":"24","hashOfConfig":"14"},{"size":1375,"mtime":1608177999030,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"fh1omp",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},"B:\\Voiceboard\\reactxflask\\react-flask-app\\src\\pages\\profile\\index.js",["59","60","61","62","63","64","65","66","67","68","69"],"import React, { useState, useEffect,  } from 'react';\r\nimport NavBar from '../../Components/Navbar'\r\nimport spinner from '../../Components/postFeed/loading-arrow.svg'\r\nimport '../../Components/postFeed/postFeed.css';\r\nimport { Navbar ,Button , Nav , FormControl , Form, Card, Modal } from 'react-bootstrap';\r\nimport authHeader from '../../services/auth-header';\r\nimport { Heart, CheckCircle, HeartFill} from 'react-bootstrap-icons';\r\nimport axios from 'axios'\r\n\r\nconst b64toBlob = (b64Data, contentType='', sliceSize=512) => {\r\n    const byteCharacters = atob(b64Data);\r\n    const byteArrays = [];\r\n  \r\n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\r\n      const slice = byteCharacters.slice(offset, offset + sliceSize);\r\n  \r\n      const byteNumbers = new Array(slice.length);\r\n      for (let i = 0; i < slice.length; i++) {\r\n        byteNumbers[i] = slice.charCodeAt(i);\r\n      }\r\n  \r\n      const byteArray = new Uint8Array(byteNumbers);\r\n      byteArrays.push(byteArray);\r\n    }\r\n  \r\n    const blob = new Blob(byteArrays, {type: contentType});\r\n    return blob;\r\n  }\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            externalData: null,\r\n            pfData: null,\r\n            modalActive: false,\r\n            name:\"\",\r\n            bio:\"\",\r\n        }\r\n    }\r\n    follow = (uid) => {\r\n        const formData = new FormData();\r\n        formData.append('idUsers', uid);\r\n        fetch('https://core-outcome-257723.uc.r.appspot.com/api/follow', {\r\n          method: 'POST',\r\n          headers: authHeader(),\r\n          body: formData\r\n        })\r\n        .then((response) => {\r\n            if (response.ok) {\r\n              return response.json();\r\n            } else {\r\n              throw new Error('Something went wrong');\r\n            }\r\n          })\r\n        .then(data => {\r\n          console.log(data)\r\n          window.location.reload()\r\n        })\r\n        .catch(error => {\r\n          alert(error)\r\n        })\r\n    }\r\n\r\n    updateProfile = () => {\r\n    const formData = new FormData()\r\n    formData.append('name', this.state.name);\r\n    formData.append('biography', this.state.bio);\r\n    fetch('https://core-outcome-257723.uc.r.appspot.com/api/changeprofile', {\r\n        method: 'POST',\r\n        headers: authHeader(),\r\n        body: formData\r\n      })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error('Something went wrong');\r\n        }\r\n      })\r\n      .then(data => {\r\n        console.log(data)\r\n        window.location.reload()\r\n      })\r\n      .catch(error => {\r\n        alert(error)\r\n      })\r\n    }\r\n\r\n    like = (postid) => {\r\n        const formData = new FormData();\r\n        formData.append('idPosts', postid);\r\n        fetch('https://core-outcome-257723.uc.r.appspot.com/api/like', {\r\n          method: 'POST',\r\n          headers: authHeader(),\r\n          body: formData\r\n        })\r\n        .then((response) => {\r\n            if (response.ok) {\r\n              return response.json();\r\n            } else {\r\n              throw new Error('Something went wrong');\r\n            }\r\n          })\r\n        .then(data => {\r\n          console.log(data)\r\n          window.location.reload()\r\n        })\r\n        .catch(error => {\r\n          alert(error)\r\n        })\r\n      }\r\n\r\n      componentDidMount(){\r\n        axios.get('https://core-outcome-257723.uc.r.appspot.com/api/profile/' + this.props.name, {\r\n          method: 'GET',\r\n          headers: authHeader(),\r\n        })\r\n        .then(response => {\r\n            console.log(response)\r\n            this.setState({\r\n                pfData: response.data.userInfo,\r\n                name:   response.data.userInfo[0],\r\n                bio:    response.data.userInfo[2],\r\n            })\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      });\r\n      axios.get('https://core-outcome-257723.uc.r.appspot.com/api/posts/' + this.props.name, {\r\n        method: 'GET',\r\n        headers: authHeader()\r\n      })\r\n      .then(resp => {\r\n          console.log(resp.data.users)\r\n          this.setState({\r\n              externalData: resp.data.users,\r\n          })\r\n    })\r\n    .catch(error => {\r\n        console.log(error.response)\r\n      });\r\n      }\r\n    \r\n  render(){\r\n      return(\r\n          <div>\r\n      <NavBar/>\r\n    {(this.state.pfData === null  || this.state.pfData === undefined)?  \r\n          <img  style={{ width: '30rem', margin: \"auto\" }} src={spinner} className='loading-icon' alt=\"logo\"/>    \r\n   :\r\n      <div className=\"App\">\r\n    <body>\r\n    <Card body style={{ width: '30rem', margin: \"auto\" }}>\r\n    <Card.Title style={{color: \"black\"}}>{this.state.pfData[0]}{\r\n      this.state.pfData[3]?\r\n      <CheckCircle/>\r\n      :\r\n      <a/>\r\n      }</Card.Title>\r\n     \r\n        <Card.Subtitle className=\"mb-2 text-muted\">@{this.props.name}</Card.Subtitle>\r\n         <Card.Body>\r\n        <Card.Text>\r\n          <div>\r\n              {this.state.pfData[2]}\r\n        </div>\r\n        </Card.Text>\r\n        <b>{this.state.pfData[7]}</b>Following&nbsp;&nbsp;<b>{this.state.pfData[6]}</b>Followers\r\n        {this.state.pfData[5]?\r\n        <div>\r\n        <Button onClick={()=> this.setState({modalActive:true})} style={{\r\n            float: 'right'\r\n        }}>Edit profile</Button>\r\n         <Modal\r\n        show={this.state.modalActive}\r\n        onHide={() => this.setState({modalActive: false})}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n          <Form onSubmit={() => this.updateProfile}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit Profile</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <Form.Group controlId=\"formGroupName\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control type=\"text\" name=\"name\" placeholder=\"Your Name\" value={this.state.name} onChange={(e) => {this.setState({name: e.target.value})}}/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formGroupBio\">\r\n                <Form.Label>Bio</Form.Label>\r\n                <Form.Control as=\"textarea\" rows={2} name=\"biography\" placeholder=\"Your Biography\" value={this.state.bio} onChange={(e) => {this.setState({bio: e.target.value})}} />\r\n            </Form.Group> \r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => this.setState({modalActive: false})}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={() => this.updateProfile()}>Submit</Button>\r\n        </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n        </div>\r\n        :\r\n        <Button onClick={() =>this.follow(this.state.pfData[4])} style={{\r\n            float: 'right'\r\n        }}>{this.state.pfData[8]?<a>Follow</a>:<a>Unfolllow</a>}</Button>\r\n        }\r\n      </Card.Body>\r\n    </Card>\r\n    </body>\r\n      </div>\r\n    }\r\n{(this.state.externalData === null  || this.state.externalData === undefined)?  \r\n          <img style={{ width: '30rem', margin: \"auto\" }} src={spinner} className='loading-icon' alt=\"logo\"/>    \r\n   :\r\n   this.state.externalData.map((n) => {\r\n      \r\n  return(\r\n    <Card body style={{ width: '30rem', margin: \"auto\" }}> \r\n    <a href={\"/profile/\" + n[2]}>\r\n      <Card.Title style={{color: \"black\"}}>{n[1]}{\r\n    n[6]?\r\n    <CheckCircle/>\r\n    :\r\n    <a/>\r\n    }</Card.Title>\r\n    <Card.Subtitle className=\"mb-2 text-muted\">@{n[2]}</Card.Subtitle></a>\r\n    <audio src={URL.createObjectURL(b64toBlob(n[3]))} controls=\"controls\" /> \r\n    {n[8]?\r\n    <HeartFill onClick={()=> this.like(n[5])}></HeartFill>\r\n    :\r\n    <Heart onClick={()=> {this.like(n[5])}}></Heart>\r\n    }{n[7][0]}\r\n    </Card>\r\n  )\r\n})}</div>\r\n);\r\n}\r\n}\r\n  export default Profile;",["70","71"],"B:\\Voiceboard\\reactxflask\\react-flask-app\\src\\services\\auth.service.js",[],"B:\\Voiceboard\\reactxflask\\react-flask-app\\src\\index.js",["72","73"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\n\nReactDOM.render(\n  <BrowserRouter>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","B:\\Voiceboard\\reactxflask\\react-flask-app\\src\\pages\\signup\\index.js",["74","75","76","77","78","79","80","81","82","83"],"import React, { useState, useEffect } from 'react';\r\nimport { Navbar ,Button , Nav , FormControl , Form, Card } from 'react-bootstrap'\r\nimport axios from \"axios\"\r\nimport NavBar from '../../Components/Navbar'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\n\r\n//import '../App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nfunction Signup() {\r\n    const history = useHistory();\r\n    const [register, setRegister] = useState(false)\r\n    const [serverState, setServerState] = useState({\r\n        submitting: false,\r\n        status: null\r\n      });\r\n\r\n\r\n      const handleServerResponse = (ok, msg, form, res) => {\r\n          //console.log(res)\r\n        setServerState({\r\n          submitting: false,\r\n          status: { ok, msg }\r\n        });\r\n        if (ok) {\r\n          form.reset();\r\n        }\r\n      };\r\n      const handleOnRegisterSubmit = e => {\r\n        e.preventDefault();\r\n        const form = e.target;\r\n        setServerState({ submitting: true });\r\n        axios({\r\n          method: \"post\",\r\n          url: \"https://core-outcome-257723.uc.r.appspot.com/api/signup\",\r\n          data: new FormData(form)\r\n        })\r\n          .then(r => {\r\n            handleServerResponse(true, \"Thanks! Please log in\", form, r);\r\n          })\r\n          .catch(r => {\r\n            handleServerResponse(false, r.response.data.error, form, r);\r\n            console.log(r);\r\n          });\r\n      };\r\n\r\n      const handleOnLoginSubmit = e => {\r\n        e.preventDefault();\r\n        const form = e.target;\r\n        setServerState({ submitting: true });\r\n        axios({\r\n          method: \"post\",\r\n          url: \"https://core-outcome-257723.uc.r.appspot.com/api/login\",\r\n          data: new FormData(form)\r\n        })\r\n          .then(r => {\r\n            if (r.data.accessToken) {\r\n                localStorage.setItem(\"user\", JSON.stringify(r.data));\r\n                console.log(\"stored lol\");\r\n              }\r\n            handleServerResponse(true, \"Thanks!\", form, r);\r\n            \r\n            history.push('/feed');\r\n          })\r\n          .catch(r => {\r\n            handleServerResponse(false, r.response.data.error, form, r);\r\n          });\r\n      };\r\n      \r\n  return (\r\n    <div className=\"App\">\r\n     <NavBar/>\r\n  \r\n      {/*<header className=\"App-header\">\r\n\r\n        ... no changes in this part ...\r\n\r\n        <p>The current time is {currentTime}.</p>\r\n  </header>*/}\r\n  <body>\r\n      {register? \r\n      <Form onSubmit={handleOnRegisterSubmit} style={{ width: '30rem', margin: \"auto\" }}>\r\n          <Form.Group controlId=\"formGroupName\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control type=\"name\" placeholder=\"Enter name\" name=\"name\" />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGroupUserName\">\r\n              <Form.Label>User Name</Form.Label>\r\n              <Form.Control type=\"username\" placeholder=\"Enter username\" name=\"username\" />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGroupPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" placeholder=\"Enter password\" name=\"password\" />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGroupPasswordConfirm\">\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control type=\"password\" placeholder=\"Re-enter password\" name=\"password_confirm\" />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGroupEmail\">\r\n              <Form.Label>E-mail</Form.Label>\r\n              <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"email\" />\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n            {serverState.status && (\r\n                <p style={{ width: '30rem', margin: \"auto\" }} className={!serverState.status.ok ? \"errorMsg\" : \"\"}>\r\n                {serverState.status.msg}</p>\r\n            )}\r\n      </Form>\r\n      :\r\n      <Form onSubmit={handleOnLoginSubmit} style={{ width: '30rem', margin: \"auto\" }}>\r\n          <Form.Group controlId=\"formGroupUserName\">\r\n              <Form.Label>User Name</Form.Label>\r\n              <Form.Control type=\"username\" placeholder=\"Enter username\" name=\"username\" />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGroupPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" placeholder=\"Enter password\" name=\"password\" />\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n            {serverState.status && (\r\n                <p className={!serverState.status.ok ? \"errorMsg\" : \"\"}>\r\n                {serverState.status.msg}</p>\r\n            )}\r\n      </Form>\r\n}\r\n        {register? \r\n        <div style={{ width: '30rem', margin: \"auto\" }}><a>Already on Decbl? </a> <a style={{color:\"blue\"}} onClick={() => setRegister(!register)}> Sign in.</a></div>\r\n        :\r\n        <div style={{ width: '30rem', margin: \"auto\" }}>\r\n        <a >Don't have an account yet?</a> <a style={{color:\"blue\"}} onClick={() => setRegister(!register)}> Create one now!</a> <br/>\r\n        <a style={{color:\"blue\"}} onClick={() => alert(\"That sounds like a you problem\")}>Forgot your password?</a></div>}\r\n    \r\n  </body>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;","B:\\Voiceboard\\reactxflask\\react-flask-app\\src\\pages\\popular\\index.js",["84","85","86","87","88","89"],"import React from 'react';\r\nimport { Button , Nav , FormControl , Form, Card } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport spinner from '../../Components/postFeed/loading-arrow.svg'\r\nimport '../../Components/postFeed/';\r\nimport { Heart, CheckCircle, HeartFill} from 'react-bootstrap-icons';\r\nimport authHeader from '../../services/auth-header';\r\nimport NavBar from '../../Components/Navbar'\r\n\r\n\r\n\r\nconst b64toBlob = (b64Data, contentType='', sliceSize=512) => {\r\n    const byteCharacters = atob(b64Data);\r\n    const byteArrays = [];\r\n  \r\n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\r\n      const slice = byteCharacters.slice(offset, offset + sliceSize);\r\n  \r\n      const byteNumbers = new Array(slice.length);\r\n      for (let i = 0; i < slice.length; i++) {\r\n        byteNumbers[i] = slice.charCodeAt(i);\r\n      }\r\n  \r\n      const byteArray = new Uint8Array(byteNumbers);\r\n      byteArrays.push(byteArray);\r\n    }\r\n  \r\n    const blob = new Blob(byteArrays, {type: contentType});\r\n    return blob;\r\n  }\r\n\r\nclass Popular extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            externalData: null,\r\n        }\r\n    }\r\n//const [currentUsers, setCurrentUsers] = useState([[]]);\r\n\r\n/*useEffect(() => {\r\n    //get time is only being used as a template\r\n    fetch('/api/time').then(res => res.json()).then(data => {\r\n      setCurrentTime(data.time);\r\n    });\r\n    //we are getting the current user count\r\n    console.log(\"is fetch working?\");\r\n\r\n    fetch('/api/posts').then(res => res.json()).then(data => {\r\n      setCurrentUsers(data.users);\r\n      console.log(data.users)\r\n    }); \r\n  }, []);*/\r\n  like = (postid) => {\r\n    const formData = new FormData();\r\n    formData.append('idPosts', postid);\r\n    fetch('https://core-outcome-257723.uc.r.appspot.com/api/like', {\r\n      method: 'POST',\r\n      headers: authHeader(),\r\n      body: formData\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        window.location.reload()\r\n    })\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n    \r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('https://core-outcome-257723.uc.r.appspot.com/api/popularposts', {\r\n      method: 'GET',\r\n      mode: 'cors'\r\n    }\r\n    ).then(res => res.json())\r\n        .then(data => {\r\n        this.setState({\r\n            externalData: data.users,\r\n        })\r\n  });\r\n  }\r\n\r\n  render(){\r\n    if(this.state.externalData === null || this.state.externalData === undefined) {\r\n        return(\r\n            <div className=\"App\">\r\n                <NavBar/>\r\n          <img style={{ width: '30rem', margin: \"auto\" }} src={spinner} className='loading-icon' alt=\"logo\"/>\r\n          </div>\r\n        );\r\n    } else {\r\n      return(\r\n        <div>\r\n            <NavBar></NavBar>\r\n    {\r\n    this.state.externalData.map((n) => {\r\n      \r\n      console.log(n)\r\n    return(\r\n      <Card style={{ width: '30rem', margin: \"auto\" }} body> \r\n      <a href={\"/profile/\" + n[2]}>\r\n        <Card.Title style={{color: \"black\"}}>{n[1]}{\r\n      n[6]?\r\n      <CheckCircle/>\r\n      :\r\n      <a/>\r\n      }</Card.Title>\r\n      <Card.Subtitle className=\"mb-2 text-muted\">@{n[2]}</Card.Subtitle></a>\r\n      <audio src={URL.createObjectURL(b64toBlob(n[3]))} controls=\"controls\" /> \r\n      {n[8]?\r\n      <HeartFill onClick={()=> this.like(n[5])}></HeartFill>\r\n      :\r\n      <Heart onClick={()=> {this.like(n[5])}}></Heart>\r\n      }{n[7][0]}\r\n      </Card>\r\n    )\r\n  })\r\n\r\n}</div>)\r\n}  \r\n}\r\n}\r\n\r\nexport default Popular\r\n","B:\\Voiceboard\\reactxflask\\react-flask-app\\src\\App.js",["90","91","92","93","94","95","96","97","98","99","100"],"import React, { useState, useEffect } from 'react';\nimport { Navbar ,Button , Nav , FormControl , Form, Card } from 'react-bootstrap'\nimport logo from './logo.svg';\nimport { BrowserRouter, Route, Switch, useParams, Redirect } from 'react-router-dom';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport home from './pages';\nimport signup from './pages/signup';\nimport feed from './pages/feed';\nimport Profile from './pages/profile'\nimport popular from './pages/popular'\n\n\n\nfunction App() {\n  return(\n    <main>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Redirect to=\"/popular\"/>\n        </Route>\n        <Route path=\"/signup\" component={signup}/>\n        <Route path=\"/feed\" component={feed}/>\n        <Route path=\"/popular\" component={popular}/>\n        </Switch>\n        <Switch>\n        <Route path=\"/profile/:id\" children={<PF/>}/>\n      </Switch>\n    </main>\n  )\n}\n\nfunction PF() {\n  let { id } = useParams();\n\n  return (\n    <Profile name={id}/>\n  );\n}\nexport default App;","B:\\Voiceboard\\reactxflask\\react-flask-app\\src\\Components\\AudioRecorder.js",[],"B:\\Voiceboard\\reactxflask\\react-flask-app\\src\\Components\\postFeed\\index.js",["101","102","103","104","105","106","107","108","109","110"],"B:\\Voiceboard\\reactxflask\\react-flask-app\\src\\Components\\Navbar\\index.js",["111","112","113","114"],"B:\\Voiceboard\\reactxflask\\react-flask-app\\src\\reportWebVitals.js",[],"B:\\Voiceboard\\reactxflask\\react-flask-app\\src\\pages\\feed\\index.js",["115","116","117","118","119","120","121","122","123"],"import React, { useState, useEffect } from 'react';\r\nimport { Navbar ,Button , Nav , FormControl , Form, Card } from 'react-bootstrap'\r\n//import '../App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport AudioRecorder from '../../Components/AudioRecorder'\r\nimport PostFeed from '../../Components/postFeed';\r\nimport NavBar from '../../Components/Navbar'\r\n\r\nfunction Feed() {\r\n  \r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <NavBar/>\r\n  \r\n      {/*<header className=\"App-header\">\r\n\r\n        ... no changes in this part ...\r\n\r\n        <p>The current time is {currentTime}.</p>\r\n  </header>*/}\r\n  <body>\r\n    <AudioRecorder/>\r\n \r\n<PostFeed/>\r\n    \r\n  </body>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Feed;",["124","125"],"B:\\Voiceboard\\reactxflask\\react-flask-app\\src\\pages\\index.js",["126","127","128","129","130","131"],"import React, { useState, useEffect } from 'react';\r\nimport { Navbar ,Button , Nav , FormControl , Form, Card } from 'react-bootstrap';\r\n//import '../App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport NavBar from '../Components/Navbar'\r\n\r\n\r\n\r\nfunction Home() {\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [currentUsers, setCurrentUsers] = useState([[]]);\r\n\r\n\r\n  useEffect(() => {\r\n    //get time is only being used as a template\r\n    fetch('https://cors-anywhere.herokuapp.com/https://core-outcome-257723.uc.r.appspot.com/api/time').then(res => res.json()).then(data => {\r\n      setCurrentTime(data.time);\r\n    });\r\n    //we are getting the current user count\r\n    fetch('https://cors-anywhere.herokuapp.com/https://core-outcome-257723.uc.r.appspot.com/api/users').then(res => res.json()).then(data => {\r\n      setCurrentUsers(data.users);\r\n    });\r\n  }, []);\r\n\r\n  const usersx = currentUsers.map((n) =>{\r\n    return(\r\n      <Card body>\r\n        <Card.Title>{n[0]}</Card.Title>\r\n        <Card.Text>{n[1]}</Card.Text>\r\n      </Card>\r\n    )\r\n  });\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <NavBar/>\r\n  \r\n      {/*<header className=\"App-header\">\r\n\r\n        ... no changes in this part ...\r\n\r\n        <p>The current time is {currentTime}.</p>\r\n  </header>*/}\r\n  <body>\r\n\r\n{usersx}\r\n\r\n  </body>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;",{"ruleId":"132","severity":1,"message":"133","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":25},{"ruleId":"132","severity":1,"message":"136","line":1,"column":27,"nodeType":"134","messageId":"135","endLine":1,"endColumn":36},{"ruleId":"132","severity":1,"message":"137","line":5,"column":10,"nodeType":"134","messageId":"135","endLine":5,"endColumn":16},{"ruleId":"132","severity":1,"message":"138","line":5,"column":27,"nodeType":"134","messageId":"135","endLine":5,"endColumn":30},{"ruleId":"132","severity":1,"message":"139","line":5,"column":33,"nodeType":"134","messageId":"135","endLine":5,"endColumn":44},{"ruleId":"140","severity":1,"message":"141","line":160,"column":7,"nodeType":"142","endLine":160,"endColumn":11},{"ruleId":"143","severity":1,"message":"144","line":160,"column":7,"nodeType":"142","endLine":160,"endColumn":11},{"ruleId":"140","severity":1,"message":"141","line":208,"column":34,"nodeType":"142","endLine":208,"endColumn":37},{"ruleId":"140","severity":1,"message":"141","line":208,"column":48,"nodeType":"142","endLine":208,"endColumn":51},{"ruleId":"143","severity":1,"message":"144","line":227,"column":5,"nodeType":"142","endLine":227,"endColumn":9},{"ruleId":"140","severity":1,"message":"141","line":227,"column":5,"nodeType":"142","endLine":227,"endColumn":9},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"132","severity":1,"message":"149","line":6,"column":25,"nodeType":"134","messageId":"135","endLine":6,"endColumn":30},{"ruleId":"132","severity":1,"message":"150","line":6,"column":32,"nodeType":"134","messageId":"135","endLine":6,"endColumn":38},{"ruleId":"132","severity":1,"message":"136","line":1,"column":27,"nodeType":"134","messageId":"135","endLine":1,"endColumn":36},{"ruleId":"132","severity":1,"message":"137","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":16},{"ruleId":"132","severity":1,"message":"138","line":2,"column":27,"nodeType":"134","messageId":"135","endLine":2,"endColumn":30},{"ruleId":"132","severity":1,"message":"139","line":2,"column":33,"nodeType":"134","messageId":"135","endLine":2,"endColumn":44},{"ruleId":"132","severity":1,"message":"151","line":2,"column":53,"nodeType":"134","messageId":"135","endLine":2,"endColumn":57},{"ruleId":"140","severity":1,"message":"141","line":133,"column":57,"nodeType":"142","endLine":133,"endColumn":60},{"ruleId":"140","severity":1,"message":"141","line":133,"column":83,"nodeType":"142","endLine":133,"endColumn":148},{"ruleId":"140","severity":1,"message":"141","line":136,"column":9,"nodeType":"142","endLine":136,"endColumn":13},{"ruleId":"140","severity":1,"message":"141","line":136,"column":44,"nodeType":"142","endLine":136,"endColumn":109},{"ruleId":"140","severity":1,"message":"141","line":137,"column":9,"nodeType":"142","endLine":137,"endColumn":91},{"ruleId":"132","severity":1,"message":"152","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":16},{"ruleId":"132","severity":1,"message":"138","line":2,"column":19,"nodeType":"134","messageId":"135","endLine":2,"endColumn":22},{"ruleId":"132","severity":1,"message":"139","line":2,"column":25,"nodeType":"134","messageId":"135","endLine":2,"endColumn":36},{"ruleId":"132","severity":1,"message":"153","line":2,"column":39,"nodeType":"134","messageId":"135","endLine":2,"endColumn":43},{"ruleId":"143","severity":1,"message":"144","line":109,"column":7,"nodeType":"142","endLine":109,"endColumn":11},{"ruleId":"140","severity":1,"message":"141","line":109,"column":7,"nodeType":"142","endLine":109,"endColumn":11},{"ruleId":"132","severity":1,"message":"133","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":25},{"ruleId":"132","severity":1,"message":"136","line":1,"column":27,"nodeType":"134","messageId":"135","endLine":1,"endColumn":36},{"ruleId":"132","severity":1,"message":"137","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":16},{"ruleId":"132","severity":1,"message":"152","line":2,"column":18,"nodeType":"134","messageId":"135","endLine":2,"endColumn":24},{"ruleId":"132","severity":1,"message":"138","line":2,"column":27,"nodeType":"134","messageId":"135","endLine":2,"endColumn":30},{"ruleId":"132","severity":1,"message":"139","line":2,"column":33,"nodeType":"134","messageId":"135","endLine":2,"endColumn":44},{"ruleId":"132","severity":1,"message":"153","line":2,"column":47,"nodeType":"134","messageId":"135","endLine":2,"endColumn":51},{"ruleId":"132","severity":1,"message":"151","line":2,"column":53,"nodeType":"134","messageId":"135","endLine":2,"endColumn":57},{"ruleId":"132","severity":1,"message":"154","line":3,"column":8,"nodeType":"134","messageId":"135","endLine":3,"endColumn":12},{"ruleId":"132","severity":1,"message":"155","line":4,"column":10,"nodeType":"134","messageId":"135","endLine":4,"endColumn":23},{"ruleId":"132","severity":1,"message":"156","line":7,"column":8,"nodeType":"134","messageId":"135","endLine":7,"endColumn":12},{"ruleId":"132","severity":1,"message":"137","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":16},{"ruleId":"132","severity":1,"message":"152","line":2,"column":18,"nodeType":"134","messageId":"135","endLine":2,"endColumn":24},{"ruleId":"132","severity":1,"message":"138","line":2,"column":27,"nodeType":"134","messageId":"135","endLine":2,"endColumn":30},{"ruleId":"132","severity":1,"message":"139","line":2,"column":33,"nodeType":"134","messageId":"135","endLine":2,"endColumn":44},{"ruleId":"132","severity":1,"message":"153","line":2,"column":47,"nodeType":"134","messageId":"135","endLine":2,"endColumn":51},{"ruleId":"143","severity":1,"message":"144","line":124,"column":7,"nodeType":"142","endLine":124,"endColumn":11},{"ruleId":"140","severity":1,"message":"141","line":124,"column":7,"nodeType":"142","endLine":124,"endColumn":11},{"ruleId":"157","severity":1,"message":"158","line":133,"column":27,"nodeType":"159","messageId":"160","endLine":133,"endColumn":29},{"ruleId":"143","severity":1,"message":"144","line":136,"column":5,"nodeType":"142","endLine":136,"endColumn":9},{"ruleId":"140","severity":1,"message":"141","line":136,"column":5,"nodeType":"142","endLine":136,"endColumn":9},{"ruleId":"143","severity":1,"message":"144","line":58,"column":7,"nodeType":"142","endLine":58,"endColumn":11},{"ruleId":"140","severity":1,"message":"141","line":58,"column":7,"nodeType":"142","endLine":58,"endColumn":11},{"ruleId":"143","severity":1,"message":"144","line":63,"column":7,"nodeType":"142","endLine":63,"endColumn":11},{"ruleId":"140","severity":1,"message":"141","line":63,"column":7,"nodeType":"142","endLine":63,"endColumn":11},{"ruleId":"132","severity":1,"message":"136","line":1,"column":27,"nodeType":"134","messageId":"135","endLine":1,"endColumn":36},{"ruleId":"132","severity":1,"message":"137","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":16},{"ruleId":"132","severity":1,"message":"152","line":2,"column":18,"nodeType":"134","messageId":"135","endLine":2,"endColumn":24},{"ruleId":"132","severity":1,"message":"138","line":2,"column":27,"nodeType":"134","messageId":"135","endLine":2,"endColumn":30},{"ruleId":"132","severity":1,"message":"139","line":2,"column":33,"nodeType":"134","messageId":"135","endLine":2,"endColumn":44},{"ruleId":"132","severity":1,"message":"153","line":2,"column":47,"nodeType":"134","messageId":"135","endLine":2,"endColumn":51},{"ruleId":"132","severity":1,"message":"151","line":2,"column":53,"nodeType":"134","messageId":"135","endLine":2,"endColumn":57},{"ruleId":"132","severity":1,"message":"161","line":11,"column":10,"nodeType":"134","messageId":"135","endLine":11,"endColumn":21},{"ruleId":"132","severity":1,"message":"162","line":11,"column":23,"nodeType":"134","messageId":"135","endLine":11,"endColumn":37},{"ruleId":"145","replacedBy":"163"},{"ruleId":"147","replacedBy":"164"},{"ruleId":"132","severity":1,"message":"137","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":16},{"ruleId":"132","severity":1,"message":"152","line":2,"column":18,"nodeType":"134","messageId":"135","endLine":2,"endColumn":24},{"ruleId":"132","severity":1,"message":"138","line":2,"column":27,"nodeType":"134","messageId":"135","endLine":2,"endColumn":30},{"ruleId":"132","severity":1,"message":"139","line":2,"column":33,"nodeType":"134","messageId":"135","endLine":2,"endColumn":44},{"ruleId":"132","severity":1,"message":"153","line":2,"column":47,"nodeType":"134","messageId":"135","endLine":2,"endColumn":51},{"ruleId":"132","severity":1,"message":"161","line":10,"column":10,"nodeType":"134","messageId":"135","endLine":10,"endColumn":21},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'FormControl' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","no-native-reassign",["165"],"no-negated-in-lhs",["166"],"'Route' is defined but never used.","'Switch' is defined but never used.","'Card' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'logo' is defined but never used.","'BrowserRouter' is defined but never used.","'home' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'currentTime' is assigned a value but never used.","'setCurrentTime' is assigned a value but never used.",["165"],["166"],"no-global-assign","no-unsafe-negation"]